<?php

/*
 * Game Constants
 */

const TURN_MAX = 10;
const TOKEN_SETUP_NB = 15;
const MAX_COMMON_ACTIONS_BY_TURN = 2;
const MAX_PERSONAL_ACTIONS_BY_TURN = TURN_MAX;

const COLUMN_MIN = 1;
const COLUMN_MAX = 10;
const ROW_MIN = 1;
const ROW_MAX = 10;
const ROW_START = ROW_MIN;

const WIND_DIR_NORTH = 'N';
const WIND_DIR_SOUTH = 'S';
const WIND_DIR_EAST = 'E';
const WIND_DIR_WEST = 'W';

const SCORE_DIFFICULTY_1 = 5;
const SCORE_DIFFICULTY_2 = 10;
const SCORE_DIFFICULTY_3 = 20;
const SCORE_DIFFICULTY_4 = 40;
const SCORE_JOKER_USED = -5;
const SCORE_PER_RECRUIT = 1;
//Not specified by the rules : but I add this to separate '0' score when fullfil easy game with joker VS loosing
const SCORE_FAIL = -1;

/* TOKEN TYPES : stigmerians, then pollens*/
const TOKEN_STIG_BLUE =     1;
const TOKEN_STIG_YELLOW =   2;
const TOKEN_STIG_RED =      3;
const TOKEN_STIG_ORANGE =   4;
const TOKEN_STIG_GREEN =    5;
const TOKEN_STIG_VIOLET =   6;
const TOKEN_STIG_BROWN =    7;
const TOKEN_STIG_WHITE =    8;
const TOKEN_STIG_BLACK =    9;
const STIG_PRIMARY_COLORS = [TOKEN_STIG_BLUE,TOKEN_STIG_RED,TOKEN_STIG_YELLOW, ];
const STIG_COLORS = [TOKEN_STIG_BLUE,TOKEN_STIG_RED,TOKEN_STIG_YELLOW,
    TOKEN_STIG_ORANGE,TOKEN_STIG_GREEN,TOKEN_STIG_VIOLET,
    TOKEN_STIG_BROWN,TOKEN_STIG_WHITE,TOKEN_STIG_BLACK,
];
const TOKEN_POLLEN_BLUE =     11;
const TOKEN_POLLEN_YELLOW =   12;
const TOKEN_POLLEN_RED =      13;
const TOKEN_POLLEN_ORANGE =   14;
const TOKEN_POLLEN_GREEN =    15;
const TOKEN_POLLEN_VIOLET =   16;
const TOKEN_POLLEN_BROWN =    17;
const TOKEN_POLLEN_WHITE =    18;
const TOKEN_POLLEN_BLACK =    19;
const TOKEN_POLLENS = [
    TOKEN_STIG_BLUE     => TOKEN_POLLEN_BLUE    ,
    TOKEN_STIG_YELLOW   => TOKEN_POLLEN_YELLOW  ,
    TOKEN_STIG_RED      => TOKEN_POLLEN_RED     ,
    TOKEN_STIG_ORANGE   => TOKEN_POLLEN_ORANGE  ,
    TOKEN_STIG_GREEN    => TOKEN_POLLEN_GREEN   ,
    TOKEN_STIG_VIOLET   => TOKEN_POLLEN_VIOLET  ,
    TOKEN_STIG_BROWN    => TOKEN_POLLEN_BROWN   ,
    TOKEN_STIG_WHITE    => TOKEN_POLLEN_WHITE   ,
    TOKEN_STIG_BLACK    => TOKEN_POLLEN_BLACK   ,
];


/* TOKEN LOCATIONS */ 
const TOKEN_LOCATION_PLAYER_DECK = 'player_deck_';//To be followed by pid in order to shuffle separately
const TOKEN_LOCATION_PLAYER_RECRUIT = 'player_recruit';
const TOKEN_LOCATION_PLAYER_BOARD = 'player_board';
const TOKEN_LOCATION_OUT = 'OUT';
const TOKEN_LOCATION_CENTRAL_RECRUIT = 'central_recruit';
const TOKEN_LOCATION_CENTRAL_RECRUIT_TOPLACE = 'central_toplace';
const TOKEN_LOCATION_CENTRAL_BOARD = 'central_board';

/* TOKEN STATES */ 
const TOKEN_STATE_STIGMERIAN = 0;
const TOKEN_STATE_POLLEN = 1;

/** ACTIONS COSTS */
const ACTION_COST_MOVE = 1;
const ACTION_COST_LAND = 1;
const ACTION_COST_CENTRAL_LAND = 1;
const ACTION_COST_CENTRAL_MOVE = 1;
const ACTION_COST_MERGE = 1;

/** ACTIONS TYPES */
const ACTION_TYPE_MERGE = 10;

/*
 * Game options
 */ 
// BGA OPTION
const OPTION_GAMESTATE_RATING_MODE = 201; 
const OPTION_GAMESTATE_RATING_MODE_TRAINING = 1;

const OPTION_MODE = 100;
const OPTION_MODE_DISCOVERY = 1;
const OPTION_MODE_NORMAL = 2;
const OPTION_MODE_COMPETITIVE = 3;
const OPTION_MODE_NOLIMIT = 4;
const OPTION_MODE_CHALLENGE = 5;

const OPTION_FLOWER = 101;
const OPTION_FLOWER_VERTIGHAINEUSE = 1;
const OPTION_FLOWER_MARONNE = 2;
const OPTION_FLOWER_SIFFLOCHAMP = 3;
const OPTION_FLOWER_DENTDINE = 4;
const OPTION_FLOWER_INSPIRACTRICE = 5;
const OPTION_FLOWER_COMPETITIVE = 6;
const OPTION_FLOWER_NO_LIMIT = 7;
const OPTION_FLOWER_RANDOM = 10;
const OPTION_FLOWER_VALUES = [
    OPTION_FLOWER_VERTIGHAINEUSE,
    OPTION_FLOWER_MARONNE,
    OPTION_FLOWER_SIFFLOCHAMP,
    OPTION_FLOWER_DENTDINE,
    OPTION_FLOWER_INSPIRACTRICE,
    OPTION_FLOWER_COMPETITIVE,
    OPTION_FLOWER_NO_LIMIT,
];

const OPTION_DIFFICULTY = 102;
const OPTION_DIFFICULTY_1 = 1;
const OPTION_DIFFICULTY_2 = 2;
const OPTION_DIFFICULTY_3 = 3;
const OPTION_DIFFICULTY_4 = 4;
const OPTION_DIFFICULTY_RANDOM = 10;
const OPTION_DIFFICULTY_VALUES = [
    OPTION_DIFFICULTY_1,
    OPTION_DIFFICULTY_2,
    OPTION_DIFFICULTY_3,
    //OPTION_DIFFICULTY_4, -> only NL
];
const OPTION_DIFFICULTY_NL = 103;
const OPTION_DIFFICULTY_ALL = 104;

const OPTION_SCHEMA_V1 = 110;
const OPTION_SCHEMA_V2 = 111;
const OPTION_SCHEMA_V3 = 112;
const OPTION_SCHEMA_M1 = 113;
const OPTION_SCHEMA_M2 = 114;
const OPTION_SCHEMA_M3 = 115;
const OPTION_SCHEMA_S1 = 116;
const OPTION_SCHEMA_S2 = 117;
const OPTION_SCHEMA_S3 = 118;
const OPTION_SCHEMA_D1 = 119;
const OPTION_SCHEMA_D2 = 120;
const OPTION_SCHEMA_D3 = 121;
const OPTION_SCHEMA_I1 = 122;
const OPTION_SCHEMA_I2 = 123;
const OPTION_SCHEMA_I3 = 124;
const OPTION_SCHEMA_C1 = 125;
const OPTION_SCHEMA_C2 = 126;
const OPTION_SCHEMA_C3 = 127;
const OPTION_SCHEMA_NL = 128;
const OPTION_SCHEMA_RANDOM_ONLY = 130;

const OPTION_SCHEMA_RANDOM = 0;
const OPTION_SCHEMA_1 = 1;
const OPTION_SCHEMA_2 = 2;
const OPTION_SCHEMA_3 = 3;
const OPTION_SCHEMA_4 = 4;
const OPTION_SCHEMA_5 = 5;
const OPTION_SCHEMA_6 = 6;
const OPTION_SCHEMA_7 = 7;
const OPTION_SCHEMA_8 = 8;
const OPTION_SCHEMA_9 = 9;
const OPTION_SCHEMA_10 = 10;
const OPTION_SCHEMA_11 = 11;
const OPTION_SCHEMA_12 = 12;
const OPTION_SCHEMA_13 = 13;
const OPTION_SCHEMA_14 = 14;
const OPTION_SCHEMA_15 = 15;
const OPTION_SCHEMA_16 = 16;
const OPTION_SCHEMA_17 = 17;
const OPTION_SCHEMA_18 = 18;
const OPTION_SCHEMA_19 = 19;
const OPTION_SCHEMA_20 = 20;
const OPTION_SCHEMA_21 = 21;
const OPTION_SCHEMA_22 = 22;
const OPTION_SCHEMA_23 = 23;
const OPTION_SCHEMA_24 = 24;
const OPTION_SCHEMA_25 = 25;
const OPTION_SCHEMA_26 = 26;
const OPTION_SCHEMA_27 = 27;
const OPTION_SCHEMA_28 = 28;
const OPTION_SCHEMA_29 = 29;
const OPTION_SCHEMA_30 = 30;
const OPTION_SCHEMA_31 = 31;
const OPTION_SCHEMA_32 = 32;
const OPTION_SCHEMA_33 = 33;
const OPTION_SCHEMA_34 = 34;
const OPTION_SCHEMA_35 = 35;
const OPTION_SCHEMA_36 = 36;
const OPTION_SCHEMA_37 = 37;
const OPTION_SCHEMA_38 = 38;
const OPTION_SCHEMA_39 = 39;
const OPTION_SCHEMA_40 = 40;
const OPTION_SCHEMA_41 = 41;
const OPTION_SCHEMA_42 = 42;
const OPTION_SCHEMA_43 = 43;
const OPTION_SCHEMA_44 = 44;
const OPTION_SCHEMA_45 = 45;
const OPTION_SCHEMA_46 = 46;
const OPTION_SCHEMA_47 = 47;
const OPTION_SCHEMA_48 = 48;
const OPTION_SCHEMA_49 = 49;

/*
 * User preferences
 */ 
const OPTION_CONFIRM = 103;
const OPTION_CONFIRM_DISABLED = 0;
const OPTION_CONFIRM_TIMER = 1;
const OPTION_CONFIRM_ENABLED = 2;

/*
 * State constants
 */
const ST_GAME_SETUP = 1;

const ST_NEXT_ROUND = 3;

const ST_GENERATE_WIND = 5;
const ST_PLAYER_DICE = 6;

const ST_NEXT_TURN = 10;

const ST_PLAYER_TURN = 20;
const ST_TURN_COMMON_BOARD = 21;
const ST_TURN_CENTRAL_CHOICE_TOKEN_LAND = 23;
const ST_TURN_CENTRAL_CHOICE_TOKEN_MOVE = 24;
const ST_TURN_PERSONAL_BOARD = 22;
const ST_TURN_CHOICE_TOKEN_LAND = 25;
const ST_TURN_CHOICE_TOKEN_MOVE = 26;
const ST_TURN_CHOICE_SPECIAL_ACTION = 30;
const ST_TURN_SPECIAL_ACT_MERGE = 31;


const ST_WIND_EFFECT = 80;

const ST_END_ROUND = 85;

const ST_END_SCORING = 90;
const ST_PRE_END_OF_GAME = 98;
const ST_END_GAME = 99;

/******************
 ****** STATS ******
 ******************/
